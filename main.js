(()=>{"use strict";var n={365:(n,e,t)=>{t.d(e,{A:()=>s});var o=t(354),r=t.n(o),i=t(314),a=t.n(i)()(r());a.push([n.id,"* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n\nbody {\n  height: 900px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background-color: lightgray;\n}\n\n#box {\n  background-color: cornflowerblue;\n  width: 600px;\n  height: 600px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  padding: 25px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  justify-content: center;\n}\n\n#box p {\n    font-size: 20px;\n    font-weight: bold;\n    text-align: center;\n}\n\n#box form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    align-items: center;\n}\n\n#box button {\n    border: none;\n    background-color: ghostwhite;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-weight: bold;\n    color: cornflowerblue;\n    border-radius: 5px;\n    padding: 10px 20px;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n#box button:hover {\n    background-color: rgb(228, 228, 235);\n}\n\n.inputcontainer {\n    height: 80px;\n    display: flex;\n    flex-direction: column;\n    gap: 2px;\n    align-items: baseline;\n    justify-content: center;\n    position: relative;\n}\n\n.inputcontainer label {\n    font-size: 14px;\n    font-family: monospace;\n}\n\n.inputcontainer input {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 18px;\n    padding: 2px 10px;\n    width: 400px;\n}\n\n.error {\n    font-size: 12px !important;\n    background-color: crimson;\n    padding: 0px 10px;\n    color: white;\n    position: absolute;\n    bottom: 0px;\n\n}\n\ninput:user-invalid {\n    outline: none;\n    border: 2px solid crimson;\n}\n\ninput.submitted:invalid {\n    outline: none;\n    border: 2px solid crimson;\n}\n\n\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,UAAU;EACV,SAAS;EACT,gDAAgD;AAClD;;AAEA;EACE,aAAa;EACb,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,mBAAmB;EACnB,2BAA2B;AAC7B;;AAEA;EACE,gCAAgC;EAChC,YAAY;EACZ,aAAa;EACb,4EAA4E;EAC5E,aAAa;EACb,mBAAmB;EACnB,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,uBAAuB;AACzB;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,4BAA4B;IAC5B,gDAAgD;IAChD,iBAAiB;IACjB,qBAAqB;IACrB,kBAAkB;IAClB,kBAAkB;IAClB,4EAA4E;AAChF;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,qBAAqB;IACrB,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,gDAAgD;IAChD,eAAe;IACf,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,0BAA0B;IAC1B,yBAAyB;IACzB,iBAAiB;IACjB,YAAY;IACZ,kBAAkB;IAClB,WAAW;;AAEf;;AAEA;IACI,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,yBAAyB;AAC7B",sourcesContent:["* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n\nbody {\n  height: 900px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background-color: lightgray;\n}\n\n#box {\n  background-color: cornflowerblue;\n  width: 600px;\n  height: 600px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  padding: 25px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  justify-content: center;\n}\n\n#box p {\n    font-size: 20px;\n    font-weight: bold;\n    text-align: center;\n}\n\n#box form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    align-items: center;\n}\n\n#box button {\n    border: none;\n    background-color: ghostwhite;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-weight: bold;\n    color: cornflowerblue;\n    border-radius: 5px;\n    padding: 10px 20px;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n#box button:hover {\n    background-color: rgb(228, 228, 235);\n}\n\n.inputcontainer {\n    height: 80px;\n    display: flex;\n    flex-direction: column;\n    gap: 2px;\n    align-items: baseline;\n    justify-content: center;\n    position: relative;\n}\n\n.inputcontainer label {\n    font-size: 14px;\n    font-family: monospace;\n}\n\n.inputcontainer input {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 18px;\n    padding: 2px 10px;\n    width: 400px;\n}\n\n.error {\n    font-size: 12px !important;\n    background-color: crimson;\n    padding: 0px 10px;\n    color: white;\n    position: absolute;\n    bottom: 0px;\n\n}\n\ninput:user-invalid {\n    outline: none;\n    border: 2px solid crimson;\n}\n\ninput.submitted:invalid {\n    outline: none;\n    border: 2px solid crimson;\n}\n\n\n"],sourceRoot:""}]);const s=a},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);o&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],s=0;s<n.length;s++){var c=n[s],A=o.base?c[0]+o.base:c[0],d=i[A]||0,u="".concat(A," ").concat(d);i[A]=d+1;var l=t(u),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==l)e[l].references++,e[l].updater(p);else{var f=r(p,o);o.byIndex=s,e.splice(s,0,{identifier:u,updater:f,references:1})}a.push(u)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var c=o(n,r),A=0;A<i.length;A++){var d=t(i[A]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=c}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(72),e=t.n(n),o=t(825),r=t.n(o),i=t(659),a=t.n(i),s=t(56),c=t.n(s),A=t(540),d=t.n(A),u=t(113),l=t.n(u),p=t(365),f={};f.styleTagTransform=l(),f.setAttributes=c(),f.insert=a().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=d(),e()(p.A,f),p.A&&p.A.locals&&p.A.locals;const x=document.querySelector("#pw"),m=document.querySelector("#pwconfirm"),b=function(){return x.value===m.value},g=function(n,e){return{getNode:()=>n,clearError:()=>{e.textContent=""},isValid:()=>n.validity.valid,showError:()=>{"mail"===n.id&&(n.validity.valueMissing?e.textContent="Email address is required":n.validity.typeMismatch&&(e.textContent="Email address must be valid")),"country"===n.id&&n.validity.valueMissing&&(e.textContent="Country is required"),"zipcode"===n.id&&(n.validity.valueMissing?e.textContent="Zip Code is required":n.validity.patternMismatch&&(e.textContent="Zip Code should be 5 digits number")),"pw"===n.id&&(n.validity.valueMissing?e.textContent="Password is required":b()||(e.textContent="Password mismatch")),"pwconfirm"===n.id&&(n.validity.valueMissing?e.textContent="Password is required":b()||(e.textContent="Password mismatch"))}}},C=document.querySelector("#box"),h=document.querySelector("#box > p"),v=document.querySelector("form"),y=document.querySelector("#mail"),B=document.querySelector("#mail + p.error"),E=document.querySelector("#country"),I=document.querySelector("#country + p.error"),w=document.querySelector("#zipcode"),S=document.querySelector("#zipcode + p.error"),q=document.querySelector("#pw"),k=document.querySelector("#pw + p.error"),T=document.querySelector("#pwconfirm"),j=document.querySelector("#pwconfirm + p.error"),M=g(y,B),z=g(E,I),V=g(w,S),D=g(q,k),Y=g(T,j),N=[M,z,V,D,Y],L=function(n){n.getNode().addEventListener("input",(()=>{n.isValid()?n.clearError():n.showError()}))};L(M),L(z),L(V),D.getNode().addEventListener("input",(()=>{D.isValid()&&b()?(D.clearError(),Y.clearError()):(D.showError(),Y.showError())})),Y.getNode().addEventListener("input",(()=>{Y.isValid()&&b()?(D.clearError(),Y.clearError()):(D.showError(),Y.showError())})),v.addEventListener("submit",(n=>{(function(){let n=!0;return N.forEach((e=>{e.isValid()||(n=!1)})),n})()&&b()?(C.removeChild(v),h.textContent="High Five! You have signed up succesfully."):(N.forEach((n=>{n.showError(),n.getNode().classList.add("submitted")})),n.preventDefault())}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,